{
    "title": "$:/plugins/tiddlywiki/text-slicer",
    "description": "Tools for slicing text into tiddlers",
    "author": "JeremyRuston",
    "core-version": ">=5.0.0",
    "list": "readme docs",
    "version": "5.1.10-prerelease",
    "plugin-type": "plugin",
    "dependents": "",
    "type": "application/json",
    "text": "{\n    \"tiddlers\": {\n        \"$:/plugins/tiddlywiki/text-slicer/docs\": {\n            \"title\": \"$:/plugins/tiddlywiki/text-slicer/docs\",\n            \"text\": \"!! Text Slicing Approach\\n\\nIndividual tiddlers are created for each heading, paragraph and list item. They are linked together using TiddlyWiki's tagging mechanism.\\n\\nFor example, consider a tiddler titled ''Example'' containing this simple text:\\n\\n<<<\\n! This is a heading\\n\\nThis is a paragraph.\\n\\n* And the first list item\\n* Second list item\\n<<<\\n\\nIt will be sliced up into:\\n\\n* a tiddler for the overall document\\n** a tiddler for the heading\\n*** a tiddler for the paragraph\\n*** a tiddler for the list\\n**** and a tiddler for each list item\\n\\nThese tiddlers are bound together using tagging: child tiddlers are tagged with the title of their parent, and the parent tiddler has a ''list'' field that lists each child in the correct order.\\n\"\n        },\n        \"$:/plugins/tiddlywiki/text-slicer/icon\": {\n            \"title\": \"$:/plugins/tiddlywiki/text-slicer/icon\",\n            \"tags\": \"$:/tags/Image\",\n            \"text\": \"<svg class=\\\"tc-image-text-slicer tc-image-button\\\" width=\\\"22pt\\\" height=\\\"22pt\\\" viewBox=\\\"0 0 128 128\\\">\\n    <g fill-rule=\\\"evenodd\\\" sketch:type=\\\"MSPage\\\">\\n        <path d=\\\"M64,0 L118.5596,32 L118.5596,96 L64,128 L9.44039956,96 L9.44039956,32 L64,0 Z\\\" ></path>\\n        <g transform=\\\"translate(32.000000, 32.000000) scale(2.19)\\\" fill=\\\"#ffffff\\\">\\n            {{$:/plugins/tiddlywiki/text-slicer/text-slicer-icon}}\\n        </g>\\n    </g>\\n</svg>\"\n        },\n        \"$:/plugins/tiddlywiki/text-slicer/macros\": {\n            \"title\": \"$:/plugins/tiddlywiki/text-slicer/macros\",\n            \"tags\": \"$:/tags/Macro\",\n            \"text\": \"\\\\define display-heading-tiddler(level:\\\"h1\\\")\\n<$level$><$view field=\\\"title\\\"/></$level$>\\n<$list filter='[tag<currentTiddler>!has[draft.of]]'>\\n<$tiddler>\\n{{||$:/plugins/tiddlywiki/text-slicer/templates/display-tiddler}}\\n</$tiddler>\\n</$list>\\n\\\\end\\n\\n\\\\define display-list-tiddler(type:\\\"ol\\\")\\n<$type$>\\n<$list filter='[tag<currentTiddler>!has[draft.of]]'>\\n<li>\\n<$tiddler>\\n{{||$:/plugins/tiddlywiki/text-slicer/templates/display-tiddler}}\\n</$tiddler>\\n</li>\\n</$list>\\n</$type$>\\n\\\\end\\n\"\n        },\n        \"$:/plugins/tiddlywiki/text-slicer/readme\": {\n            \"title\": \"$:/plugins/tiddlywiki/text-slicer/readme\",\n            \"text\": \"//''This plugin is under active development, and is subject to change in the future''. It is currently only intended for advanced users. The tools are in the early stages of development, and likely to need some customisation to do what you need.//\\n\\nThis plugin contains tools to help slice up long texts into individual tiddlers.\\n\"\n        },\n        \"$:/plugins/tiddlywiki/text-slicer/ui/slice-button\": {\n            \"title\": \"$:/plugins/tiddlywiki/text-slicer/ui/slice-button\",\n            \"tags\": \"$:/tags/ViewToolbar\",\n            \"list-before\": \"$:/core/ui/Buttons/edit\",\n            \"caption\": \"{{$:/plugins/tiddlywiki/text-slicer/text-slicer-icon}} Slice tiddler\",\n            \"description\": \"Slice this tiddler by headings and lists\",\n            \"text\": \"\\\\define hint()\\nSlice this tiddler by headings and lists\\n\\\\end\\n\\n<$button message=\\\"tm-slice-tiddler\\\" param=<<currentTiddler>> tooltip=<<hint>> aria-label=<<hint>> class=<<tv-config-toolbar-class>>>\\n<$list filter=\\\"[<tv-config-toolbar-icons>prefix[yes]]\\\">\\n{{$:/plugins/tiddlywiki/text-slicer/text-slicer-icon}}\\n</$list>\\n<$list filter=\\\"[<tv-config-toolbar-text>prefix[yes]]\\\">\\n<span class=\\\"tc-btn-text\\\">Slice tiddler</span>\\n</$list>\\n</$button>\"\n        },\n        \"$:/plugins/tiddlywiki/text-slicer/slicer.js\": {\n            \"text\": \"/*\\\\\\ntitle: $:/plugins/tiddlywiki/text-slicer/slicer.js\\ntype: application/javascript\\nmodule-type: startup\\n\\nSetup the root widget event handlers\\n\\n\\\\*/\\n(function(){\\n\\n/*jslint node: true, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\n// Export name and synchronous status\\nexports.name = \\\"slicer\\\";\\nexports.platforms = [\\\"browser\\\"];\\nexports.after = [\\\"startup\\\"];\\nexports.synchronous = true;\\n\\nvar SLICER_OUTPUT_TITLE = \\\"$:/TextSlicer\\\";\\n\\n// Install the root widget event handlers\\nexports.startup = function() {\\n\\t$tw.rootWidget.addEventListener(\\\"tm-slice-tiddler\\\",function(event) {\\n\\t\\t// Slice up and output the tiddler\\n\\t\\toutputTiddlers(sliceTiddler(event.param),event.param,event.param);\\n\\t});\\n};\\n\\nvar currentId = 0;\\n\\nfunction nextId() {\\n\\treturn ++currentId;\\n}\\n\\n// Slice a tiddler into individual tiddlers\\nfunction sliceTiddler(title) {\\n\\tvar tiddlers = {},\\n\\t\\tparser = $tw.wiki.parseTiddler(title),\\n\\t\\tparentStack = [],\\n\\t\\taddTiddler = function(fields) {\\n\\t\\t\\tif(fields.title) {\\n\\t\\t\\t\\ttiddlers[fields.title] = $tw.utils.extend({},tiddlers[fields.title],fields);\\n\\t\\t\\t\\treturn fields.title;\\n\\t\\t\\t} else {\\n\\t\\t\\t\\treturn null;\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\taddToList = function(parent,child) {\\n\\t\\t\\tvar parentTiddler = tiddlers[parent] || {},\\n\\t\\t\\t\\tparentList = parentTiddler.list || [];\\n\\t\\t\\tparentList.push(child);\\n\\t\\t\\taddTiddler($tw.utils.extend({title: parent},parentTiddler,{list: parentList}));\\n\\t\\t},\\n\\t\\tconvertTypeToLevel = function(type) {\\n\\t\\t\\tif(type.charAt(0) === \\\"h\\\") {\\n\\t\\t\\t\\treturn parseInt(type.charAt(1),10);\\t\\t\\t\\n\\t\\t\\t} else {\\n\\t\\t\\t\\treturn null;\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\tpopParentStackUntil = function(type) {\\n\\t\\t\\t// Pop the stack to remove any entries at the same or lower level\\n\\t\\t\\tvar newLevel = convertTypeToLevel(type),\\n\\t\\t\\t\\ttopIndex = parentStack.length - 1;\\n\\t\\t\\tdo {\\n\\t\\t\\t\\tvar topLevel = convertTypeToLevel(parentStack[parentStack.length - 1].type);\\n\\t\\t\\t\\tif(topLevel !== null && topLevel < newLevel ) {\\n\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tparentStack.length--;\\n\\t\\t\\t} while(true);\\n\\t\\t\\treturn parentStack[parentStack.length - 1].title;\\n\\t\\t},\\n\\t\\tprocessNodeList = function(nodeList) {\\n\\t\\t\\t$tw.utils.each(nodeList,function(parseTreeNode) {\\n\\t\\t\\t\\tvar parentTitle,\\n\\t\\t\\t\\t\\ttext = $tw.utils.getParseTreeText(parseTreeNode);\\n\\t\\t\\t\\tif(parseTreeNode.type === \\\"element\\\" && (parseTreeNode.tag === \\\"h1\\\" || parseTreeNode.tag === \\\"h2\\\" || parseTreeNode.tag === \\\"h3\\\" || parseTreeNode.tag === \\\"h4\\\")) {\\n\\t\\t\\t\\t\\tparentTitle = popParentStackUntil(parseTreeNode.tag);\\n\\t\\t\\t\\t\\taddToList(parentTitle,text);\\n\\t\\t\\t\\t\\tparentStack.push({type: parseTreeNode.tag, title: addTiddler({\\n\\t\\t\\t\\t\\t\\ttitle: text,\\n\\t\\t\\t\\t\\t\\ttext: \\\"<<display-heading-tiddler level:'\\\" + parseTreeNode.tag + \\\"'>>\\\",\\n\\t\\t\\t\\t\\t\\tlist: [],\\n\\t\\t\\t\\t\\t\\ttags: [parentTitle]\\n\\t\\t\\t\\t\\t})});\\n\\t\\t\\t\\t} else if(parseTreeNode.type === \\\"element\\\" && (parseTreeNode.tag === \\\"ul\\\" || parseTreeNode.tag === \\\"ol\\\")) {\\n\\t\\t\\t\\t\\tvar listTitle = title + \\\"-list-\\\" + nextId();\\n\\t\\t\\t\\t\\tparentTitle = parentStack[parentStack.length - 1].title;\\n\\t\\t\\t\\t\\taddToList(parentTitle,listTitle);\\n\\t\\t\\t\\t\\tparentStack.push({type: parseTreeNode.tag, title: addTiddler({\\n\\t\\t\\t\\t\\t\\ttitle: listTitle,\\n\\t\\t\\t\\t\\t\\ttext: \\\"<<display-list-tiddler type:'\\\" + parseTreeNode.tag + \\\"'>>\\\",\\n\\t\\t\\t\\t\\t\\tlist: [],\\n\\t\\t\\t\\t\\t\\ttags: [parentTitle]\\n\\t\\t\\t\\t\\t})});\\n\\t\\t\\t\\t\\tprocessNodeList(parseTreeNode.children);\\n\\t\\t\\t\\t\\tparentStack.pop();\\n\\t\\t\\t\\t} else if(parseTreeNode.type === \\\"element\\\" && parseTreeNode.tag === \\\"li\\\") {\\n\\t\\t\\t\\t\\tvar listItemTitle = title + \\\"-listitem-\\\" + nextId();\\n\\t\\t\\t\\t\\tparentTitle = parentStack[parentStack.length - 1].title;\\n\\t\\t\\t\\t\\taddToList(parentTitle,listItemTitle);\\n\\t\\t\\t\\t\\taddTiddler({\\n\\t\\t\\t\\t\\t\\ttitle: listItemTitle,\\n\\t\\t\\t\\t\\t\\ttext: text,\\n\\t\\t\\t\\t\\t\\tlist: [],\\n\\t\\t\\t\\t\\t\\ttags: [parentTitle]\\n\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t} else if(parseTreeNode.type === \\\"element\\\" && parseTreeNode.tag === \\\"p\\\") {\\n\\t\\t\\t\\t\\tparentTitle = parentStack[parentStack.length - 1].title;\\n\\t\\t\\t\\t\\taddToList(parentTitle,addTiddler({\\n\\t\\t\\t\\t\\t\\ttitle: title + \\\"-para-\\\" + nextId(),\\n\\t\\t\\t\\t\\t\\ttext: text,\\n\\t\\t\\t\\t\\t\\ttags: [parentTitle]\\n\\t\\t\\t\\t\\t}));\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\t\\t};\\n\\tif(parser) {\\n\\t\\tparentStack.push({type: \\\"h0\\\", title: addTiddler({\\n\\t\\t\\ttitle: \\\"Sliced up \\\" + title,\\n\\t\\t\\ttext: \\\"{{||$:/plugins/tiddlywiki/text-slicer/templates/display-document}}\\\",\\n\\t\\t\\tlist: []\\n\\t\\t})});\\n\\t\\tprocessNodeList(parser.tree);\\n\\t}\\n\\treturn tiddlers;\\n}\\n\\n// Output directly to the output tiddlers\\nfunction outputTiddlers(tiddlers,title,navigateFromTitle) {\\n\\t$tw.utils.each(tiddlers,function(tiddlerFields) {\\n\\t\\tvar title = tiddlerFields.title;\\n\\t\\tif(title) {\\n\\t\\t\\t$tw.wiki.addTiddler(new $tw.Tiddler($tw.wiki.getCreationFields(),tiddlerFields,$tw.wiki.getModificationFields()));\\n\\t\\t}\\n\\t});\\n\\t// Navigate to output\\n\\tvar story = new $tw.Story({wiki: $tw.wiki});\\n\\tstory.navigateTiddler(\\\"Sliced up \\\" + title,navigateFromTitle);\\n}\\n\\n// Output via an import tiddler\\nfunction outputTiddlers_viaImportTiddler(tiddlers,navigateFromTitle) {\\n\\t// Get the current slicer output tiddler\\n\\tvar slicerOutputTiddler = $tw.wiki.getTiddler(SLICER_OUTPUT_TITLE),\\n\\t\\tslicerOutputData = $tw.wiki.getTiddlerData(SLICER_OUTPUT_TITLE,{}),\\n\\t\\tnewFields = new Object({\\n\\t\\t\\ttitle: SLICER_OUTPUT_TITLE,\\n\\t\\t\\ttype: \\\"application/json\\\",\\n\\t\\t\\t\\\"plugin-type\\\": \\\"import\\\",\\n\\t\\t\\t\\\"status\\\": \\\"pending\\\"\\n\\t\\t});\\n\\t// Process each tiddler\\n\\tslicerOutputData.tiddlers = slicerOutputData.tiddlers || {};\\n\\t$tw.utils.each(tiddlers,function(tiddlerFields) {\\n\\t\\tvar title = tiddlerFields.title;\\n\\t\\tif(title) {\\n\\t\\t\\tslicerOutputData.tiddlers[title] = tiddlerFields;\\n\\t\\t}\\n\\t});\\n\\t// Save the slicer output tiddler\\n\\tnewFields.text = JSON.stringify(slicerOutputData,null,$tw.config.preferences.jsonSpaces);\\n\\t$tw.wiki.addTiddler(new $tw.Tiddler(slicerOutputTiddler,newFields));\\n\\t// Navigate to output\\n\\tvar story = new $tw.Story({wiki: $tw.wiki});\\n\\tstory.navigateTiddler(SLICER_OUTPUT_TITLE,navigateFromTitle);\\n}\\n\\n})();\\n\",\n            \"title\": \"$:/plugins/tiddlywiki/text-slicer/slicer.js\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"startup\"\n        },\n        \"$:/tags/TextSlicerToolbar\": {\n            \"title\": \"$:/tags/TextSlicerToolbar\",\n            \"list\": \"$:/plugins/tiddlywiki/text-slicer/toolbar/title $:/plugins/tiddlywiki/text-slicer/toolbar/rename $:/plugins/tiddlywiki/text-slicer/toolbar/edit $:/plugins/tiddlywiki/text-slicer/toolbar/cancel $:/plugins/tiddlywiki/text-slicer/toolbar/done\",\n            \"text\": \"\"\n        },\n        \"$:/plugins/tiddlywiki/text-slicer/templates/display-document\": {\n            \"title\": \"$:/plugins/tiddlywiki/text-slicer/templates/display-document\",\n            \"text\": \"\\\\define config-show-toolbar()\\n$:/plugins/tiddlywiki/text-slicer/config/show-toolbar/$(currentTiddler)$\\n\\\\end\\n\\n\\\\define display-tiddler()\\n<$set name=\\\"tv-show-toolbar\\\" value={{$(config-show-toolbar)$}}>\\n<<display-heading-tiddler level:'h1'>>\\n</$set>\\n\\\\end\\n\\n<div class='tc-table-of-contents'>\\n\\n<$macrocall $name=\\\"toc-selective-expandable\\\" tag=<<currentTiddler>>/>\\n\\n</div>\\n\\n<$checkbox tiddler=<<config-show-toolbar>> field=\\\"text\\\" checked=\\\"yes\\\" unchecked=\\\"no\\\" default=\\\"no\\\"> Show toolbar</$checkbox>\\n\\n<<display-tiddler>>\\n\"\n        },\n        \"$:/plugins/tiddlywiki/text-slicer/templates/display-tiddler\": {\n            \"title\": \"$:/plugins/tiddlywiki/text-slicer/templates/display-tiddler\",\n            \"text\": \"<$list filter=\\\"[<tv-show-toolbar>prefix[yes]]\\\" variable=\\\"hasToolbar\\\">\\n{{||$:/plugins/tiddlywiki/text-slicer/templates/tiddler-toolbar}}\\n</$list>\\n<$list filter=\\\"[draft.of<currentTiddler>limit[1]]\\\" emptyMessage=\\\"\\\"\\\"<$transclude mode='block'/>\\\"\\\"\\\">\\n<$transclude tiddler=\\\"$:/plugins/tiddlywiki/text-slicer/templates/edit-tiddler\\\" mode=\\\"block\\\"/>\\n</$list>\\n\"\n        },\n        \"$:/plugins/tiddlywiki/text-slicer/templates/edit-tiddler\": {\n            \"title\": \"$:/plugins/tiddlywiki/text-slicer/templates/edit-tiddler\",\n            \"text\": \"<$set name=\\\"storyTiddler\\\" value=<<currentTiddler>>>\\n<$keyboard key=\\\"escape\\\" message=\\\"tm-cancel-tiddler\\\">\\n<$keyboard key=\\\"ctrl+enter\\\" message=\\\"tm-save-tiddler\\\">\\n<$list filter=\\\"[all[shadows+tiddlers]tag[$:/tags/EditTemplate]!has[draft.of]] -[[$:/core/ui/EditTemplate/controls]] -[[$:/core/ui/EditTemplate/title]]\\\" variable=\\\"listItem\\\">\\n<$transclude tiddler=<<listItem>>/>\\n</$list>\\n</$keyboard>\\n</$keyboard>\\n</$set>\\n\"\n        },\n        \"$:/plugins/tiddlywiki/text-slicer/templates/tiddler-toolbar\": {\n            \"title\": \"$:/plugins/tiddlywiki/text-slicer/templates/tiddler-toolbar\",\n            \"text\": \"<div class=\\\"tc-slice-toolbar\\\" style=\\\"background:#def;\\\">\\n<$list filter=\\\"[all[shadows+tiddlers]tag[$:/tags/TextSlicerToolbar]!has[draft.of]]\\\" variable=\\\"listItem\\\"><$transclude tiddler=<<listItem>>/></$list>\\n</div>\\n\"\n        },\n        \"$:/plugins/tiddlywiki/text-slicer/text-slicer-icon\": {\n            \"title\": \"$:/plugins/tiddlywiki/text-slicer/text-slicer-icon\",\n            \"tags\": \"$:/tags/Image\",\n            \"text\": \"<svg class=\\\"tc-image-text-slicer tc-image-button\\\" width=\\\"22pt\\\" height=\\\"22pt\\\" viewBox=\\\"0 0 128 128\\\">\\n    <g fill-rule=\\\"evenodd\\\">\\n        <g transform=\\\"translate(4.000000, 0.000000)\\\">\\n            <path d=\\\"M38.3411765,60.8692043 L37.0438554,60.5934502 L36.1060169,61.5312888 L30.0358967,67.6014089 L26.8546358,70.7826698 L31.2553046,71.7180609 L57.49096,77.2946216 L55.6094677,75.4131293 L60.2969414,97.4659591 L62.6863095,96.9580832 L63.4542053,94.6391709 C61.3968756,93.9578968 59.2178345,93.6803997 57.0133961,93.834549 C47.752502,94.4821338 40.7734518,102.529805 41.4221661,111.806851 C42.0708803,121.083897 50.1020302,128.081953 59.3629243,127.434368 C68.6238185,126.786783 75.6028686,118.739112 74.9541544,109.462066 C74.9172571,108.93441 74.8561906,108.411074 74.7713217,107.893227 L72.3607324,108.288294 L74.8030833,108.332344 C74.8113029,107.876617 74.7676676,107.419644 74.6718491,106.968854 L68.0968468,76.0359001 L65.1996027,78.9331442 L95.7256082,85.4216469 C97.3484677,85.8346681 99.1301315,85.9957158 100.927243,85.8700496 C110.188137,85.2224648 117.167187,77.1747935 116.518473,67.8977477 C115.869758,58.6207018 107.838608,51.622646 98.5777143,52.2702308 C89.3168202,52.9178156 82.3377701,60.9654868 82.9864843,70.2425327 C83.0829952,71.6227022 83.3447327,72.9713395 83.7634295,74.2666802 L86.0877705,73.5153767 L86.5956464,71.1260085 L64.5768319,66.445765 L66.4583242,68.3272573 L52.9962533,4.9931931 C52.3027992,1.7307483 49.0908655,-0.351931923 45.8299389,0.34119942 C42.5678304,1.03458199 40.4828911,4.24818153 41.1753213,7.50580974 L53.9709451,67.7044865 L56.8681892,64.8072424 L38.3411765,60.8692043 L38.3411765,60.8692043 Z M62.9704214,109.856258 C62.9938415,110.000792 63.0107875,110.147165 63.0211368,110.295166 C63.2044836,112.917148 61.2347613,115.188472 58.6247241,115.370983 C56.014687,115.553495 53.7480268,113.578408 53.5646799,110.956426 C53.3813331,108.334444 55.3510554,106.063121 57.9610925,105.880609 C60.1295425,105.728976 62.1103551,107.076498 62.7888621,109.116336 L65.1067464,108.345342 L62.7173781,108.853218 L62.850917,109.48147 C62.9106646,109.76256 62.989888,110.03773 63.0878857,110.305385 L65.3817182,109.465533 L62.9704214,109.856258 L62.9704214,109.856258 Z M100.189042,73.8066649 C97.5790052,73.9891764 95.312345,72.0140901 95.1289982,69.3921077 C94.9456513,66.7701254 96.9153736,64.4988023 99.5254108,64.3162907 C102.135448,64.1337792 104.402108,66.1088655 104.585455,68.7308479 C104.768802,71.3528302 102.79908,73.6241533 100.189042,73.8066649 L100.189042,73.8066649 L100.189042,73.8066649 Z\\\"></path>\\n            <g transform=\\\"translate(37.805833, 47.877863) rotate(-135.000000) translate(-37.805833, -47.877863) translate(34.692000, -1.943461)\\\">\\n                <path d=\\\"M6.22766546,40.4798255 C6.22766546,38.7601032 4.83355506,37.3659928 3.11383273,37.3659928 C1.3941104,37.3659928 -1.32677371e-13,38.7601032 -1.32782674e-13,40.4798255 C-1.32887976e-13,42.1995478 1.3941104,43.5936583 3.11383273,43.5936583 C4.83355506,43.5936583 6.22766546,42.1995478 6.22766546,40.4798255 L6.22766546,40.4798255 Z\\\" id=\\\"Oval-251\\\"></path>\\n                <path d=\\\"M6.22766546,87.1873165 C6.22766546,85.4675942 4.83355506,84.0734838 3.11383273,84.0734838 C1.3941104,84.0734838 -1.93517593e-13,85.4675942 -1.93622895e-13,87.1873165 C-1.93728198e-13,88.9070388 1.3941104,90.3011492 3.11383273,90.3011492 C4.83355506,90.3011492 6.22766546,88.9070388 6.22766546,87.1873165 L6.22766546,87.1873165 Z\\\"></path>\\n                <path d=\\\"M6.22766546,96.5288147 C6.22766546,94.8090924 4.83355506,93.414982 3.11383273,93.414982 C1.3941104,93.414982 -1.26904211e-13,94.8090924 -1.27009514e-13,96.5288147 C-1.27114817e-13,98.248537 1.3941104,99.6426474 3.11383273,99.6426474 C4.83355506,99.6426474 6.22766546,98.248537 6.22766546,96.5288147 L6.22766546,96.5288147 Z\\\"></path>\\n                <path d=\\\"M6.22766546,31.1383273 C6.22766546,29.418605 4.83355506,28.0244946 3.11383273,28.0244946 C1.3941104,28.0244946 -2.01955288e-13,29.418605 -2.0206059e-13,31.1383273 C-2.02165893e-13,32.8580497 1.3941104,34.2521601 3.11383273,34.2521601 C4.83355506,34.2521601 6.22766546,32.8580497 6.22766546,31.1383273 L6.22766546,31.1383273 Z\\\"></path>\\n                <path d=\\\"M6.22766546,78.0925797 C6.22766546,76.3728573 4.83355506,74.9787469 3.11383273,74.9787469 C1.3941104,74.9787469 -8.33239236e-15,76.3728573 -8.43769499e-15,78.0925797 C-8.54299761e-15,79.812302 1.3941104,81.2064124 3.11383273,81.2064124 C4.83355506,81.2064124 6.22766546,79.812302 6.22766546,78.0925797 L6.22766546,78.0925797 Z\\\"></path>\\n                <path d=\\\"M6.22766546,21.7968291 C6.22766546,20.0771068 4.83355506,18.6829964 3.11383273,18.6829964 C1.3941104,18.6829964 4.14055991e-14,20.0771068 4.13002965e-14,21.7968291 C4.11949939e-14,23.5165515 1.3941104,24.9106619 3.11383273,24.9106619 C4.83355506,24.9106619 6.22766546,23.5165515 6.22766546,21.7968291 L6.22766546,21.7968291 Z\\\"></path>\\n                <path d=\\\"M6.22766546,68.7510815 C6.22766546,67.0313591 4.83355506,65.6372487 3.11383273,65.6372487 C1.3941104,65.6372487 -8.33239236e-15,67.0313591 -8.43769499e-15,68.7510815 C-8.54299761e-15,70.4708038 1.3941104,71.8649142 3.11383273,71.8649142 C4.83355506,71.8649142 6.22766546,70.4708038 6.22766546,68.7510815 L6.22766546,68.7510815 Z\\\"></path>\\n                <path d=\\\"M6.22766546,12.4553309 C6.22766546,10.7356086 4.83355506,9.3414982 3.11383273,9.3414982 C1.3941104,9.3414982 -2.74282284e-14,10.7356086 -2.7533531e-14,12.4553309 C-2.76388336e-14,14.1750533 1.3941104,15.5691637 3.11383273,15.5691637 C4.83355506,15.5691637 6.22766546,14.1750533 6.22766546,12.4553309 L6.22766546,12.4553309 Z\\\"></path>\\n                <path d=\\\"M6.22766546,59.4095833 C6.22766546,57.6898609 4.83355506,56.2957505 3.11383273,56.2957505 C1.3941104,56.2957505 -7.71662199e-14,57.6898609 -7.72715225e-14,59.4095833 C-7.73768251e-14,61.1293056 1.3941104,62.523416 3.11383273,62.523416 C4.83355506,62.523416 6.22766546,61.1293056 6.22766546,59.4095833 L6.22766546,59.4095833 Z\\\"></path>\\n                <path d=\\\"M6.22766546,3.11383273 C6.22766546,1.3941104 4.83355506,3.33066907e-14 3.11383273,3.33066907e-14 C1.3941104,3.33066907e-14 -2.74282284e-14,1.3941104 -2.7533531e-14,3.11383273 C-2.76388336e-14,4.83355506 1.3941104,6.22766546 3.11383273,6.22766546 C4.83355506,6.22766546 6.22766546,4.83355506 6.22766546,3.11383273 L6.22766546,3.11383273 Z\\\"></path>\\n                <path d=\\\"M6.22766546,50.0680851 C6.22766546,48.3483627 4.83355506,46.9542523 3.11383273,46.9542523 C1.3941104,46.9542523 -7.71662199e-14,48.3483627 -7.72715225e-14,50.0680851 C-7.73768251e-14,51.7878074 1.3941104,53.1819178 3.11383273,53.1819178 C4.83355506,53.1819178 6.22766546,51.7878074 6.22766546,50.0680851 L6.22766546,50.0680851 Z\\\"></path>\\n            </g>\\n        </g>\\n    </g>\\n</svg>\\n\"\n        },\n        \"$:/plugins/tiddlywiki/text-slicer/toolbar/cancel\": {\n            \"title\": \"$:/plugins/tiddlywiki/text-slicer/toolbar/cancel\",\n            \"tags\": \"$:/tags/TextSlicerToolbar\",\n            \"text\": \"\\\\define body()\\n<$button>\\n<$action-sendmessage $message=\\\"tm-cancel-tiddler\\\" $param=<<currentTiddler>> suppressNavigation=\\\"yes\\\"/>\\ncancel\\n</$button>\\n\\\\end\\n\\n<$list filter=\\\"[draft.of<currentTiddler>limit[1]]\\\">\\n<<body>>\\n</$list>\\n\"\n        },\n        \"$:/plugins/tiddlywiki/text-slicer/toolbar/done\": {\n            \"title\": \"$:/plugins/tiddlywiki/text-slicer/toolbar/done\",\n            \"tags\": \"$:/tags/TextSlicerToolbar\",\n            \"text\": \"\\\\define body()\\n<$button>\\n<$action-sendmessage $message=\\\"tm-save-tiddler\\\" $param=<<currentTiddler>> suppressNavigation=\\\"yes\\\"/>\\ndone\\n</$button>\\n\\\\end\\n\\n<$list filter=\\\"[draft.of<currentTiddler>limit[1]]\\\">\\n<<body>>\\n</$list>\\n\"\n        },\n        \"$:/plugins/tiddlywiki/text-slicer/toolbar/edit\": {\n            \"title\": \"$:/plugins/tiddlywiki/text-slicer/toolbar/edit\",\n            \"tags\": \"$:/tags/TextSlicerToolbar\",\n            \"text\": \"\\\\define body()\\n<$button>\\n<$action-sendmessage $message=\\\"tm-edit-tiddler\\\" $param=<<currentTiddler>> suppressNavigation=\\\"yes\\\"/>\\nedit\\n</$button>\\n\\\\end\\n\\n<$list filter=\\\"[draft.of<currentTiddler>limit[1]]\\\" emptyMessage=\\\"\\\"\\\"<<body>>\\\"\\\"\\\">\\n</$list>\\n\"\n        },\n        \"$:/plugins/tiddlywiki/text-slicer/toolbar/rename\": {\n            \"title\": \"$:/plugins/tiddlywiki/text-slicer/toolbar/rename\",\n            \"tags\": \"$:/tags/TextSlicerToolbar\",\n            \"text\": \"\\\\define renameProxyTitle()\\n$:/config/plugins/tiddlywiki/text-slicer/rename-$(currentTiddler)$\\n\\\\end\\n\\n\\\\define body()\\n<$edit-text tag=\\\"input\\\" tiddler=<<renameProxyTitle>> placeholder=\\\"Rename\\\" default=<<currentTiddler>>/>\\n<$button>\\n<$action-sendmessage $message=\\\"tm-rename-tiddler\\\" from=<<currentTiddler>> to={{$(renameProxyTitle)$}}/>\\n<$action-deletetiddler $tiddler=<<renameProxyTitle>>/>\\nrename\\n</$button>\\n\\\\end\\n\\n<$list filter=\\\"[draft.of<currentTiddler>limit[1]]\\\" emptyMessage=\\\"\\\"\\\"<<body>>\\\"\\\"\\\">\\n</$list>\\n\"\n        },\n        \"$:/plugins/tiddlywiki/text-slicer/toolbar/title\": {\n            \"title\": \"$:/plugins/tiddlywiki/text-slicer/toolbar/title\",\n            \"tags\": \"$:/tags/TextSlicerToolbar\",\n            \"text\": \"<$link><$text text=<<currentTiddler>>/></$link>\\n\"\n        }\n    }\n}"
}